<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI.Controls.Toggle">

    <Style TargetType="{x:Type local:Toggle}">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Toggle}">
                    <Border x:Name="Border"  Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"  CornerRadius="4" Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Button" Grid.Column="1" Background="#f5f5f5" CornerRadius="10" Padding="5">
                                <Border x:Name="Mark" Width="12" Height="12" CornerRadius="15" Background="#5d5d5d" VerticalAlignment="Center" HorizontalAlignment="Left">
                                    <Border.RenderTransform>
                                        <TranslateTransform X="0"/>
                                    </Border.RenderTransform>
                                </Border>
                            </Border>
                            <Grid x:Name="TextContainer" Grid.Column="2" Margin="10,0,0,0">
                                <TextBlock x:Name="OnText" VerticalAlignment="Center" Text="{TemplateBinding OnText}"/>
                                <TextBlock x:Name="OffText" VerticalAlignment="Center" Text="{TemplateBinding OffText}"/>
                            </Grid>


                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="On">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.RenderTransform).
               (TranslateTransform.X)"
                                          Storyboard.TargetName="Mark">
                                            <EasingDoubleKeyFrame KeyTime="00:00:0"
                                   Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:0.2"
                                   Value="28" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <!--更改标记点颜色-->
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Mark"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2"
                                                                 Value="White"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <!--更改背景颜色-->
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Button"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:0.2"
                                                                 Value="{DynamicResource ThemeColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Off">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.RenderTransform).
               (TranslateTransform.X)"
                                          Storyboard.TargetName="Mark">
                                            <EasingDoubleKeyFrame KeyTime="00:00:0.2"
                                   Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:0"
                                   Value="28" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                            <Setter TargetName="Button" Property="Background" Value="{DynamicResource ThemeBrush}"/>
                            <Setter TargetName="Mark" Property="Background" Value="White"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).
(TranslateTransform.X)"
                           Storyboard.TargetName="Mark" To="28" Duration="0"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).
(TranslateTransform.X)"
                           Storyboard.TargetName="Mark" To="0" Duration="0"></DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OffText" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="OnText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="OffText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="OnText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="OffText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="OnText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="TextPosition" Value="Left">
                            <Setter TargetName="TextContainer" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="TextContainer" Property="Margin" Value="0,0,10,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>